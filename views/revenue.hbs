<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Boxicons -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<!-- My CSS -->
	<title>Revenue</title>

</head>

<body>
	<div id="content">
		<input type="date" id="startDate" name="startDate">
		<input type="date" id="endDate" name="endDate">
		<button onclick="updateChart()">Update Chart</button>
		{{!-- <div class="revenue-chart">
			<canvas id="revenueChart" width="800" height="400"></canvas>
		</div> --}}
	</div>
	<div id="reve">

	</div>

	<script>
		const fetchRevenueData = async (startDate, endDate) => {
			 let url = '/getrevenue';
            
            // Kiểm tra nếu có ngày thì thêm vào URL
            if (startDate && endDate) {
                url += `?startDate=${startDate}&endDate=${endDate}`;
            }

            const response = await fetch(url);
            const data = await response.json();
            return data;
		};

		const updateChart = async () => {
			const startDate = document.getElementById('startDate').value;
			const endDate = document.getElementById('endDate').value;
			const data = await fetchRevenueData(startDate, endDate);

			const dates = data.map(item => item.date);
			const amounts = data.map(item => item.totalAmount);

			const ctx = document.getElementById('revenueChart').getContext('2d');

			// Phá hủy instance biểu đồ trước nếu nó tồn tại
			if (window.revenueChart) {
				window.revenueChart.destroy();
			}

			createRevenueChart(dates, amounts);
		};

		const initializeChart = async () => {
			const startDateInput = document.getElementById('startDate');
			const endDateInput = document.getElementById('endDate');

			const startDate = startDateInput ? startDateInput.value : null;
			const endDate = endDateInput ? endDateInput.value : null;
			 const data = await fetchRevenueData(startDate, endDate);
			const mainContent = document.querySelector("#reve");
			const revenueChartDiv = document.createElement('div');
			revenueChartDiv.classList.add('revenue-chart');
			revenueChartDiv.innerHTML = `<canvas id="revenueChart" width="800" height="400"></canvas>`;
			mainContent.innerHTML = '';
			mainContent.appendChild(revenueChartDiv);

			const dates = data.map(item => item.date);
			const amounts = data.map(item => item.totalAmount);
			createRevenueChart(dates, amounts);
		};

		const createRevenueChart = (dates, amounts) => {
			const ctx = document.getElementById('revenueChart').getContext('2d');
			window.revenueChart = new Chart(ctx, {
				type: 'line',
				data: {
					labels: dates,
					datasets: [{
						label: 'Doanh thu',
						data: amounts,
						borderColor: 'rgb(75, 192, 192)',
						tension: 0.1
					}]
				},
				options: {
					scales: {
						y: {
							beginAtZero: true
						}
					}
				}
			});
		};

		// Initialize chart on page load
		document.addEventListener('DOMContentLoaded', function () {
			initializeChart()
		});
	</script>
</body>

</html>